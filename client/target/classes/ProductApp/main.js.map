{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/manage-product/manage-product.component.css","webpack:///./src/app/manage-product/manage-product.component.html","webpack:///./src/app/manage-product/manage-product.component.ts","webpack:///./src/app/message.service.ts","webpack:///./src/app/messages/messages.component.css","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/product-detail/product-detail.component.css","webpack:///./src/app/product-detail/product-detail.component.html","webpack:///./src/app/product-detail/product-detail.component.ts","webpack:///./src/app/product.service.ts","webpack:///./src/app/product.ts","webpack:///./src/app/products/products.component.css","webpack:///./src/app/products/products.component.html","webpack:///./src/app/products/products.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ProductsComponent } from './products/products.component';\nimport { ProductDetailComponent } from './product-detail/product-detail.component';\nimport { ManageProductComponent } from './manage-product/manage-product.component';\n\nconst routes: Routes = [\n    { path: '', redirectTo: '/products', pathMatch: 'full' },\n    { path: 'products', component: ProductsComponent },\n    { path: 'detail/:id', component: ProductDetailComponent },\n    { path: 'manage', component: ManageProductComponent },\n    { path: 'manage/:id', component: ManageProductComponent },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\">\\n\\t<div class=\\\"container-fluid\\\">\\n\\t\\t<div class=\\\"navbar-header\\\">\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\"\\n\\t\\t\\t\\tdata-toggle=\\\"collapse\\\" data-target=\\\"#navbar\\\" aria-expanded=\\\"false\\\"\\n\\t\\t\\t\\taria-controls=\\\"navbar\\\">\\n\\t\\t\\t\\t<span class=\\\"sr-only\\\">Toggle navigation</span> <span\\n\\t\\t\\t\\t\\tclass=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span> <span\\n\\t\\t\\t\\t\\tclass=\\\"icon-bar\\\"></span>\\n\\t\\t\\t</button>\\n\\t\\t\\t<a class=\\\"navbar-brand\\\" href=\\\"#\\\">{{title}}</a>\\n\\t\\t</div>\\n\\t\\t<div id=\\\"navbar\\\" class=\\\"navbar-collapse collapse\\\">\\n\\t\\t\\t<ul class=\\\"nav navbar-nav navbar-right\\\">\\n\\t\\t\\t\\t<li><a href=\\\"#\\\"><a routerLink=\\\"/products\\\">Products</a></a></li>\\n\\t\\t\\t\\t<li><a href=\\\"#\\\">Help</a></li>\\n\\t\\t\\t</ul>\\n\\t\\t\\t<!-- <form class=\\\"navbar-form navbar-right\\\">\\n\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\">\\n\\t\\t\\t</form> -->\\n\\t\\t</div>\\n\\t</div>\\n</nav>\\n\\n<div class=\\\"container-fluid\\\">\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col-sm-3 col-md-2 sidebar\\\">\\n\\t\\t\\t<ul class=\\\"nav nav-sidebar\\\">\\n\\t\\t\\t\\t<li class=\\\"active\\\">\\n\\t\\t\\t\\t    <a href=\\\"#\\\">Overview <span class=\\\"sr-only\\\">(current)</span></a>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t<li><a href=\\\"#\\\">Reports</a></li>\\n\\t\\t\\t\\t<li><a href=\\\"#\\\">Analytics</a></li>\\n\\t\\t\\t\\t<li><a href=\\\"#\\\">Export</a></li>\\n\\t\\t\\t</ul>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main\\\">\\n            <router-outlet></router-outlet>\\n\\t\\t\\t<app-messages></app-messages>\\n\\t\\t</div>\\n\\t</div>\\n</div>\"","import { Component } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'A Great App for Products';\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { ProductDetailComponent } from './product-detail/product-detail.component';\nimport { ProductsComponent } from './products/products.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { ManageProductComponent } from './manage-product/manage-product.component';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    RouterModule\n  ],\n  declarations: [\n    AppComponent,\n    ProductsComponent,\n    ProductDetailComponent,\n    MessagesComponent,\n    ManageProductComponent\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  manage-product works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-manage-product',\n  templateUrl: './manage-product.component.html',\n  styleUrls: ['./manage-product.component.css']\n})\nexport class ManageProductComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService {\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}\n","module.exports = \"/* MessagesComponent's private CSS styles */\\nh2 {\\n\\tcolor: red;\\n\\tfont-family: Arial, Helvetica, sans-serif;\\n\\tfont-weight: lighter;\\n}\\nbody {\\n\\tmargin: 2em;\\n}\\nbody, input[text], button {\\n\\tcolor: crimson;\\n\\tfont-family: Cambria, Georgia;\\n}\\nbutton.clear {\\n\\tfont-family: Arial;\\n\\tbackground-color: #eee;\\n\\tborder: none;\\n\\tpadding: 5px 10px;\\n\\tborder-radius: 4px;\\n\\tcursor: pointer;\\n\\tcursor: hand;\\n}\\nbutton:hover {\\n\\tbackground-color: #cfd8dc;\\n}\\nbutton:disabled {\\n\\tbackground-color: #eee;\\n\\tcolor: #aaa;\\n\\tcursor: auto;\\n}\\nbutton.clear {\\n\\tcolor: #888;\\n\\tmargin-bottom: 12px;\\n}\"","module.exports = \"<div *ngIf=\\\"messageService.messages.length\\\">\\n\\n  <h2>Messages</h2>\\n  <button class=\\\"clear\\\"\\n          (click)=\\\"messageService.clear()\\\">clear</button>\\n  <div *ngFor='let message of messageService.messages'> {{message}} </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\nimport { MessageService } from '../message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public messageService: MessageService) {}\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"product\\\">\\n\\t<h1 class=\\\"page-header\\\">{{product.name | uppercase}} Details</h1>\\n\\t<div class=\\\"row\\\">\\n\\t   <div class=\\\"form-group col-xs-2\\\">\\n            <label for=\\\"productId\\\">ID: </label> <input type=\\\"text\\\" readonly=\\\"readonly\\\" disabled=\\\"disabled\\\"\\n                class=\\\"form-control\\\" [(ngModel)]=\\\"product.id\\\">\\n        </div>\\n\\t\\t<div class=\\\"form-group col-xs-4\\\">\\n\\t\\t\\t<label for=\\\"productName\\\">Product Name: </label> <input type=\\\"text\\\"\\n\\t\\t\\t\\tclass=\\\"form-control\\\" [(ngModel)]=\\\"product.name\\\">\\n\\t\\t</div>\\n\\t\\t<div class=\\\"form-group col-xs-2\\\">\\n\\t\\t\\t<label for=\\\"productQuantity\\\">Quantity: </label>\\n\\t\\t\\t<input [(ngModel)]=\\\"product.quantity\\\" type=\\\"number\\\"\\n\\t\\t\\t\\tclass=\\\"form-control\\\">\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"form-group col-xs-2\\\">\\n\\t\\t\\t<button class=\\\"btn btn-secondary mb-2\\\" (click)=\\\"goBack()\\\">Return</button>\\n            <button class=\\\"btn btn-primary mb-2\\\" (click)=\\\"update()\\\">Update</button>\\n\\t\\t</div>\\n\\t</div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { ProductService } from '../product.service';\nimport { Product } from '../product';\n\n@Component({\n    selector: 'app-product-detail',\n    templateUrl: './product-detail.component.html',\n    styleUrls: ['./product-detail.component.css']\n})\nexport class ProductDetailComponent implements OnInit {\n\n    @Input() product: Product;\n    constructor(\n        private route: ActivatedRoute,\n        private productService: ProductService,\n        private location: Location) { }\n\n    ngOnInit() {\n        this.getProduct();\n    }\n\n    getProduct(): void {\n        const id = +this.route.snapshot.paramMap.get('id');\n        this.productService.getProduct(id)\n            .subscribe(product => this.product = product);\n    }\n\n    goBack(): void {\n        this.location.back();\n    }\n\n    update(): void {\n        this.productService.updateProduct(this.product)\n            .subscribe(() => this.goBack());\n    }\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { Product } from './product';\nimport { MessageService } from './message.service';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({ providedIn: 'root' })\nexport class ProductService {\n\n  private productsUrl = 'http://localhost:8080/products';  // URL to web api\n\n  constructor(\n    private http: HttpClient,\n    private messageService: MessageService) { }\n\n  /** GET products from the server */\n  getProducts (): Observable<Product[]> {\n      console.log(this.productsUrl);\n    return this.http.get<Product[]>(this.productsUrl)\n      .pipe(\n        tap(products => this.log('fetched products')),\n        catchError(this.handleError('getProducts', []))\n      );\n  }\n\n  /** GET product by id. Return `undefined` when id not found */\n//  getProductNo404<Data>(id: number): Observable<Product> {\n//    const url = `${this.productsUrl}/${id}`;\n//    return this.http.get<Product[]>(url)\n//      .pipe(\n//        map(products => products[0]), // returns a {0|1} element array\n//        tap(h => {\n//          const outcome = h ? `fetched` : `did not find`;\n//          this.log(`${outcome} product id=${id}`);\n//        }),\n//        catchError(this.handleError<Product>(`getProduct id=${id}`))\n//      );\n//  }\n\n  /** GET product by id. Will 404 if id not found */\n  getProduct(id: number): Observable<Product> {\n    const url = `${this.productsUrl}/${id}`;\n    return this.http.get<Product>(url).pipe(\n      tap(_ => this.log(`fetched product id=${id}`)),\n      catchError(this.handleError<Product>(`getProduct id=${id}`))\n    );\n  }\n\n\n  //////// Save methods //////////\n\n  /** POST: add a new product to the server */\n  addProduct (product: Product): Observable<Product> {\n    return this.http.post<Product>(this.productsUrl, product, httpOptions).pipe(\n      tap((prod: Product) => this.log(`added product w/ id=${prod.id}`)),\n      catchError(this.handleError<Product>('addProduct'))\n    );\n  }\n\n  /** DELETE: delete the product from the server */\n  deleteProduct (product: Product | number): Observable<Product> {\n    const id = typeof product === 'number' ? product : product.id;\n    const url = `${this.productsUrl}/${id}`;\n\n    return this.http.delete<Product>(url, httpOptions).pipe(\n      tap(_ => this.log(`deleted product id=${id}`)),\n      catchError(this.handleError<Product>('deleteProduct'))\n    );\n  }\n\n  /** PUT: update the product on the server */\n  updateProduct (product: Product): Observable<any> {\n    const id = typeof product === 'number' ? product : product.id;\n    const url = `${this.productsUrl}/${id}`;\n\n    delete product.createdOn;\n    delete product.modifiedOn;\n\n    return this.http.patch(url, product, httpOptions).pipe(\n      tap(_ => this.log(`updated product id=${id}`)),\n      catchError(this.handleError<any>('updateProduct'))\n    );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /** Log a ProductService message with the MessageService */\n  private log(message: string) {\n    this.messageService.add(`ProductService: ${message}`);\n  }\n}\n","export class Product {\n  id: number;\n  name: string;\n  quantity: number;\n  createdOn: Date;\n  modifiedOn: Date;\n}\n","module.exports = \"\"","module.exports = \"<h1 class=\\\"page-header\\\">Create new product</h1>\\n\\n<!-- <div class=\\\"row placeholders\\\">\\n\\t<div class=\\\"col-xs-6 col-sm-3 placeholder\\\"\\n\\t\\t*ngFor=\\\"let product of products | slice:0:4; let i = index\\\">\\n\\t\\t<a routerLink=\\\"/detail/{{product.id}}\\\"> <img\\n\\t\\t\\tsrc=\\\"../assets/img/product.png\\\" width=\\\"100\\\" height=\\\"100\\\"\\n\\t\\t\\tclass=\\\"rounded-circle\\\" alt=\\\"Generic placeholder thumbnail\\\">\\n\\t\\t\\t<h4>{{product.name}}</h4> <span class=\\\"text-muted\\\">Quantity:\\n\\t\\t\\t\\t{{product.quantity}}</span>\\n\\t\\t</a>\\n\\t</div>\\n</div> -->\\n\\n<div class=\\\"row\\\">\\n\\t<!-- <form class=\\\"form-inline\\\"> -->\\n\\t<div class=\\\"form-group col-xs-4\\\">\\n\\t\\t<label for=\\\"productName\\\">Product Name: </label> <input type=\\\"text\\\"\\n\\t\\t\\tclass=\\\"form-control\\\" #productName>\\n\\t</div>\\n\\t<div class=\\\"form-group col-xs-2\\\">\\n\\t\\t<label for=\\\"productQuantity\\\">Quantity: </label> <input type=\\\"number\\\"\\n\\t\\t\\tclass=\\\"form-control\\\" #productQuantity>\\n\\t</div>\\n\\t<!-- </form> -->\\n</div>\\n<div class=\\\"row\\\">\\n\\t<div class=\\\"form-group col-xs-2\\\">\\n\\t\\t<button type=\\\"submit\\\"\\n\\t\\t\\t(click)=\\\"add(productName.value, productQuantity.value); productName.value=''; productQuantity.value=''\\\"\\n\\t\\t\\tclass=\\\"btn btn-primary mb-2\\\">Add new product</button>\\n\\t</div>\\n</div>\\n\\n\\n\\n<h2 class=\\\"sub-header\\\">All Products</h2>\\n<div class=\\\"table-responsive\\\">\\n\\t<table class=\\\"table table-striped\\\">\\n\\t\\t<thead>\\n\\t\\t\\t<tr>\\n\\t\\t\\t\\t<th>ID</th>\\n\\t\\t\\t\\t<th>Name</th>\\n\\t\\t\\t\\t<th>Quantity</th>\\n\\t\\t\\t\\t<th>Created On</th>\\n\\t\\t\\t\\t<th>Modified On</th>\\n\\t\\t\\t\\t<th>Actions</th>\\n\\t\\t\\t</tr>\\n\\t\\t</thead>\\n\\t\\t<tbody>\\n\\t\\t\\t<tr *ngFor=\\\"let product of products; let i = index\\\">\\n\\t\\t\\t\\t<td>{{product.id}}</td>\\n\\t\\t\\t\\t<td>{{product.name}}</td>\\n\\t\\t\\t\\t<td>{{product.quantity}}</td>\\n\\t\\t\\t\\t<td>{{product.createdOn | date:'medium'}}</td>\\n\\t\\t\\t\\t<td>{{product.modifiedOn | date:'medium'}}</td>\\n\\t\\t\\t\\t<td><a title=\\\"delete product\\\" (click)=\\\"delete(product)\\\"> <span\\n\\t\\t\\t\\t\\t\\ttitle=\\\"Delete\\\" class=\\\"glyphicon glyphicon-trash\\\"\\n\\t\\t\\t\\t\\t\\taria-hidden=\\\"true\\\" style=\\\"cursor: pointer; margin-right: 10px;\\\"></span>\\n\\t\\t\\t\\t</a> <!-- <span title=\\\"Edit\\\" class=\\\"glyphicon glyphicon-edit\\\"\\n\\t\\t\\t\\t\\taria-hidden=\\\"true\\\" style=\\\"cursor: pointer; margin-right: 10px;\\\"></span> -->\\n\\t\\t\\t\\t\\t<a routerLink=\\\"/detail/{{product.id}}\\\"> <span\\n\\t\\t\\t\\t\\t\\ttitle=\\\"View Details\\\" class=\\\"glyphicon glyphicon-eye-open\\\"\\n\\t\\t\\t\\t\\t\\taria-hidden=\\\"true\\\" style=\\\"cursor: pointer;\\\"></span>\\n\\t\\t\\t\\t</a></td>\\n\\t\\t\\t</tr>\\n\\t\\t</tbody>\\n\\t</table>\\n</div>\\n\\n\\n<!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"myModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n\\taria-labelledby=\\\"myModalLabel\\\">\\n\\t<div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n\\t\\t<div class=\\\"modal-content\\\">\\n\\t\\t\\t<div class=\\\"modal-header\\\">\\n\\t\\t\\t\\t<h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Modal title</h5>\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\"\\n\\t\\t\\t\\t\\taria-label=\\\"Close\\\">\\n\\t\\t\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"modal-body\\\">\\n\\t\\t\\t\\t<form>\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label for=\\\"recipient-name\\\" class=\\\"col-form-label\\\">Recipient:</label>\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"recipient-name\\\">\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label for=\\\"message-text\\\" class=\\\"col-form-label\\\">Message:</label>\\n\\t\\t\\t\\t\\t\\t<textarea class=\\\"form-control\\\" id=\\\"message-text\\\"></textarea>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</form>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"modal-footer\\\">\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Save changes</button>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Product } from '../product';\n\nimport { ProductService } from '../product.service';\n\n@Component({\n    selector: 'app-products',\n    templateUrl: './products.component.html',\n    styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n\n    products: Product[];\n    constructor(private productService: ProductService) { }\n\n    ngOnInit() {\n        this.getProducts();\n    }\n\n    getProducts(): void {\n        this.productService.getProducts()\n            .subscribe(products => this.products = products);\n    }\n\n    add(name: string, quantity: number): void {\n        name = name.trim();\n        if (!name) { return; }\n        this.productService.addProduct({ name, quantity } as Product)\n            .subscribe(product => {\n                this.products.push(product);\n            });\n    }\n\n    delete(product: Product): void {\n        this.products = this.products.filter(h => h !== product);\n        this.productService.deleteProduct(product).subscribe();\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}