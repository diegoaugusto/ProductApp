swagger: "2.0"
info:
  description: "This is a set of services and endpoints available to manage and query products in a system. It can be used as a reference for other systems and reused anywhere. It is based on services available at [http://www.javaknowledge.info/jstl-1-1-simple-insert-update-delete-example/](http://www.javaknowledge.info/jstl-1-1-simple-insert-update-delete-example/)."
  version: "1.0.0"
  title: "Products API"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "diaudrimes@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8080"
basePath: "/"
tags:
- name: "Products"
  description: "Set of service for Products"
schemes:
- "http"
paths:
  /products:
    get:
      tags:
      - "Products"
      summary: "Get all the products in the system."
      description: "Get a list of all products available in the system."
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/Product"
        400:
          description: "Bad request."
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: "Resources not found"
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/ApiResponse'
    post:
      tags:
      - "Products"
      summary: "Add a new product"
      description: "This service is used to add a new product in the system."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Product object representation in JSON that needs to be added to the system"
        required: true
        schema:
          $ref: "#/definitions/Product"
      responses:
        200:
          description: "Product successfully created."
          schema:
            $ref: '#/definitions/Product'
        400:
          description: "Bad request."
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: "Resource not found"
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/ApiResponse'
  "/products/{productId}":
    get:
      tags:
      - "Products"
      summary: "Find product by ID"
      description: "Returns a single product based on its ID"
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/productId'
      responses:
        200:
          description: "Successfully gets one product based on its ID"
          schema:
            $ref: '#/definitions/Product'
        400:
          description: "Bad request."
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: "Resource not found"
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/ApiResponse'
    patch:
      tags:
      - "Products"
      summary: "Updates a product with form data"
      description: "Updates an existing product in the system"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/productId'
      responses:
        200:
          description: "Successfully updates one product based on its ID"
          schema:
            $ref: '#/definitions/Product'
        400:
          description: "Bad request."
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: "Resource not found"
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/ApiResponse'
    delete:
      tags:
      - "Products"
      summary: "Deletes an existing product"
      description: "Deletes an existing product"
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/productId'
      responses:
        200:
          description: "Successfully gets one product based on its ID"
          schema:
            $ref: '#/definitions/Product'
        400:
          description: "Bad request."
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: "Resource not found"
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/ApiResponse'
parameters:
  productId:
    name: productId
    type: integer
    format: int64
    required: true
    in: path
    description: ID of a product
definitions:
  Product:
    type: "object"
    required:
    - "name"
    - "quantity"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "doggie"
      quantity:
        type: "integer"
        format: "int64"
      createdOn:
        type: "string"
        format: "date-time"
      modifiedOn:
        type: "string"
        format: "date-time"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      message:
        type: "string"